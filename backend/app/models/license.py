import uuid
from datetime import datetime, timedelta
from enum import Enum

from sqlalchemy import Column, DateTime, Enum as SqlEnum, ForeignKey, Integer, String
from sqlalchemy.orm import relationship
from sqlalchemy_utils import UUIDType

from app.db.base import Base


class LicenseStatus(str, Enum):
    PENDING = "pending"
    ACTIVE = "active"
    EXPIRED = "expired"


class LicensePlan(str, Enum):
    ONE_HOUR = "1h"
    ONE_DAY = "1d"
    ONE_WEEK = "1w"
    ONE_MONTH = "1m"

    @classmethod
    def to_timedelta(cls, plan: "LicensePlan") -> timedelta:
        mapping = {
            cls.ONE_HOUR: timedelta(hours=1),
            cls.ONE_DAY: timedelta(days=1),
            cls.ONE_WEEK: timedelta(weeks=1),
            cls.ONE_MONTH: timedelta(days=30),
        }
        return mapping[plan]


class License(Base):
    __tablename__ = "licenses"

    id = Column(String(36), primary_key=True, default=lambda: str(uuid.uuid4()))
    user_id = Column(String(36), ForeignKey("users.id", ondelete="CASCADE"), nullable=False, index=True)
    issued_by_id = Column(String(36), ForeignKey("users.id", ondelete="SET NULL"), nullable=True)
    plan = Column(
        SqlEnum(
            LicensePlan,
            name="license_plan",
            values_callable=lambda enum: [member.value for member in enum],
        ),
        nullable=False,
    )
    status = Column(
        SqlEnum(
            LicenseStatus,
            name="license_status",
            values_callable=lambda enum: [member.value for member in enum],
        ),
        default=LicenseStatus.PENDING,
        nullable=False,
    )
    duration_seconds = Column(Integer, nullable=False)
    starts_at = Column(DateTime(timezone=True), nullable=False)
    expires_at = Column(DateTime(timezone=True), nullable=False)
    created_at = Column(DateTime(timezone=True), default=datetime.utcnow, nullable=False)
    updated_at = Column(DateTime(timezone=True), default=datetime.utcnow, onupdate=datetime.utcnow, nullable=False)

    user = relationship("User", foreign_keys=[user_id])
    issued_by = relationship("User", foreign_keys=[issued_by_id])

    @property
    def duration(self) -> timedelta:
        return timedelta(seconds=self.duration_seconds)
